@*
    **********************************************************************************
    * Copyright (c) 2019 Robin Murray
    **********************************************************************************
    *
    * File: Index.cshtml
    *
    * Description: View for  LaunchController
    *
    * Author: Robin Murray
    *
    **********************************************************************************
    *
    * Granting License: The MIT License (MIT)
    *
    *   Permission is hereby granted, free of charge, to any person obtaining a copy
    *   of this software and associated documentation files (the "Software"), to deal
    *   in the Software without restriction, including without limitation the rights
    *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *   copies of the Software, and to permit persons to whom the Software is
    *   furnished to do so, subject to the following conditions:
    *   The above copyright notice and this permission notice shall be included in
    *   all copies or substantial portions of the Software.
    *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    *   THE SOFTWARE.
    *
    **********************************************************************************
*@

@model  PEClient.Models.LaunchViewModel

@{
    ViewBag.Title = "Launch Survey";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div>
        <div>
            <img src="~/Content/images/kyle-hinkson-xyXcGADvAwE-unsplash.jpg" style="width: 100%" />
        </div>

        <h2>Launch Survey</h2>
        <br />

        @* -- Validation Summary -- *@

        @if (IsPost)
        {
            <div class="alert alert-danger">@Html.ValidationSummary()</div>
        }

        @using (Html.BeginForm("Index", "Launch", FormMethod.Post, new { @class = "form-launch" }))
        {
            @* -- Launch Name -- *@

            @Html.LabelFor(m => m.LaunchName, "Launch Name", new { @class = "control-label" })<br />
            @Html.ValidationMessageFor(m => m.LaunchName, "", new { @class = "alert-danger" })
            @Html.TextBoxFor(m => m.LaunchName, new
            {
                @class = "form-control",
                title = "Enter a descriptive name for the this peer evaluation cycle",
                autofocus = "",
                placeholder = "Enter name for Launch",
                required = true
            })
            <br>

            @* -- Templates list -- *@

            @Html.LabelFor(m => m.Survey, "Survey", new { @class = "control-label" })<br />
            @Html.ValidationMessageFor(m => m.Survey, "", new { @class = "alert-danger" })
            @Html.DropDownListFor(m => m.Survey, Model.Surveys, "-- select a survey --", new { @class = "form-control" })
            <br>

            @* -- Start DateTime -- *@

            @Html.LabelFor(m => m.StartDateTime, "Start date and time", new { @class = "control-label" })<br />
            @Html.TextBoxFor(m => m.StartDateTime, new { id = "start-date-time", @class = "form-control", required = true })
            @Html.ValidationMessageFor(m => m.StartDateTime, "", new { @class = "alert-danger" })
            <br>

            @* -- End DateTime -- *@

            @Html.LabelFor(m => m.EndDateTime, "End date and time", new { @class = "control-label" })<br />
            @Html.TextBoxFor(m => m.EndDateTime, new { id = "end-date-time", @class = "form-control", required = true })
            @Html.ValidationMessageFor(m => m.EndDateTime, "", new { @class = "alert-danger" })
            <hr>

            @* -- Add Team DropDown -- *@

            @Html.LabelFor(m => m.SelectedCandidate, "Peer Groups", new { @class = "control-label" })<br />
            @Html.DropDownListFor(m => m.SelectedCandidate, Model.liCandidates, "-- select a group --", new { @class = "form-control", style = "display: inline-block; width: 250px;" })

            @* -- Add User Button -- *@

            <button type="button" id="btn-add-team" class="btn btn-primary" name="action" value="add-user" onclick="ShowRow();" style="margin-left: 5px; display: inline;">
                Add
            </button>
            <br />

            @* -- Hidden Peer Group listbox -- *@

            @Html.ListBoxFor(m => m.SelectedTeams, Model.liTeams, new { @class = "form-control", style = "display: none" })<br />
            @Html.ValidationMessageFor(m => m.SelectedTeams, "", new { @class = "alert-danger" })

            <table id="tbl-edit-team" style="border-top: 1px solid #ccc; border-bottom: 1px solid #ccc; margin-top: 0; margin-bottom: 20px; width: 100%">
                <tr>
                    <td colspan="2"><h4 id="table-team-name" style="text-decoration:underline"></h4></td>
                </tr>
                <tr>
                    <th class="table-header">Name</th>
                    <th class="table-header-badge"></th>
                </tr>
                @foreach (var team in Model.Teams)
                {
                    <tr id="tr-@(team.Id)" style="display: none">
                        <td class="table-data">@team.Name</td>
                        <td class="table-data-badge">
                            <span class="badge">
                                <a data-row-id="@(team.Id)" href="#0" onclick="deleteRow(event)" style="color: white">delete</a>
                            </span>
                        </td>
                    </tr>
                }
            </table>


            @* -- Submit and Cancel buttons -- *@

            @Html.Partial("~/Views/Shared/_SubmitAndCancel.cshtml")
        }

    </div>

@section scripts{

    <script>

        $(document).ready(function () {
            $('#start-date-time').datetimepicker();
            $('#end-date-time').datetimepicker();
            UpdateTableFromListbox();
        })

        // fill in required fields with some data
        //function fakeFillLaunchSurveyFields() {
        //    $('input').val(" ");
        //    return true;
        //}

        // Transfers model data from hidden listbox into
        // table containing peers who have been selected
        function UpdateTableFromListbox() {
            // Cycle through selected listbox items
            $("#SelectedTeams option:selected").each(function () {
                // Use the peers user ID to denote a row in the table
                var userId = $(this).val();
                $(`#tr-${userId}`).css("display", "table-row");
            });
        }

        // Shows the row corresponding to a selected peers user ID
        function ShowRow() {

            var userId = $("#SelectedCandidate").val();

            if ("" != userId) {

                var tableRow = $(`#tr-${userId}`);

                if (tableRow.css("display") == "table-row") {
                    var name = $(`#SelectedCandidate option[value='${userId}']`).text();
                    alert(name + " is already a member of the team!");
                    return;
                }

                tableRow.css("display", "table-row");

                // Select the list item in the hidden listbox specified by User ID
                $(`#SelectedTeams option[value='${userId}']`).prop("selected", true);
            }
        }

        // Deletes a row from the table and prevents the anchor from firing.
        function deleteRow(event) {

            var userId = event.target.getAttribute('data-row-id');
            var rowToDelete = `#tr-${userId}`;
            $(rowToDelete).css("display", "none");
            event.preventDefault();

            // Deselect the list item in the hidden listbox specified by User ID
            $(`#PeerSelection option[value='${userId}']`).prop("selected", false);
        }
    </script>
}
