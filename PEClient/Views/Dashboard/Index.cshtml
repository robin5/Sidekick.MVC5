@*
    **********************************************************************************
    * Copyright (c) 2019 Robin Murray
    **********************************************************************************
    *
    * File: Index.cshtml
    *
    * Description: View for  DashboardController
    *
    * Author: Robin Murray
    *
    **********************************************************************************
    *
    * Granting License: The MIT License (MIT)
    *
    *   Permission is hereby granted, free of charge, to any person obtaining a copy
    *   of this software and associated documentation files (the "Software"), to deal
    *   in the Software without restriction, including without limitation the rights
    *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *   copies of the Software, and to permit persons to whom the Software is
    *   furnished to do so, subject to the following conditions:
    *   The above copyright notice and this permission notice shall be included in
    *   all copies or substantial portions of the Software.
    *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    *   THE SOFTWARE.
    *
    **********************************************************************************
*@

@model  PEClient.Models.DashboardViewModel

@{
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<div class="dsh-container">
    <div class="dsh-title">
        <h2 style="text-align: center;">THE PROCESS</h2>
    </div>
    <!-------------------------------------------------->
    <div class="dsh-content">
        @if (TempData.SuccessMessage() != null)
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                @TempData.SuccessMessage()
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        else if (TempData.ErrorMessage() != null)
        {
            <div class="alert alert-danger alert-dismissible" role="alert">
                @TempData.ErrorMessage()
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <!-------------------------------------------------->

        <!--p>It's a <strong>3</strong> step process:</p -->
        <ol style="margin-left: -20px">
            <li>@Html.ActionLink("Create a peer survey", "Index", "Template")</li>
            <li>@Html.ActionLink("Create a peer group", "Index", "CreateTeam")</li>
            <li>@Html.ActionLink("Send a peer survey to one or more peer groups", "Index", "Launch")</li>
        </ol>
        <hr>

        <!-------------------------------------------------->

        <div>
            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#templates" aria-expanded="false" aria-controls="collapseExample">
                <h4>Peer Surveys</h4>
            </button>
        </div>
        <br>
        <div id="templates" class="collapse">
            <div style="display: flex; flex-wrap: wrap; margin-left: 20px">

                @* Generate survey instance cards *@

                @if (Model.Surveys.Count > 0)
                {
                    foreach (var survey in Model.Surveys)
                    {
                        <div class="dsh-item">
                            <h4>@Html.ActionLink(survey.Name, "Index", "ViewSurvey", new { id = survey.Id }, null)</h4>
                        </div>
                    }
                }
                else
                {
                    <div class="dsh-no-items"><p>None defined - Execute step 1 above to define a peer survey.</p></div>
                }

            </div><!-- flex row -->
            <hr>
        </div><!-- collapse -->
        <!-------------------------------------------------->

        <div>
            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#teams" aria-expanded="false" aria-controls="collapseExample">
                <h4>Peer Groups</h4>
            </button>
        </div>
        <br>
        <div id="teams" class="collapse">
            <div style="display: flex; flex-wrap: wrap;">

                @* Generate survey instance cards *@

                @if (Model.Teams.Count > 0)
                {
                    foreach (var team in Model.Teams)
                    {
                        <div class="card">
                            <div class="card dsh-item">
                                <h4>@Html.ActionLink(team.Name, "Index", "ViewTeam", new { id = team.Id }, null)</h4>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="dsh-no-items"><p>None defined - Execute step 2 above to define a peer group.</p></div>
                }

            </div><!-- flex row -->
            <hr>
        </div><!-- collapse -->
        <!-------------------------------------------------->
        <div>
            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#launched" aria-expanded="false" aria-controls="collapseExample">
                <h4>Launched Surveys</h4>
            </button>
        </div>
        <br>
        <div id="launched" class="collapse">

            <div style="display: flex; flex-wrap: wrap;">

                @* Generate survey instance cards *@

                @if (Model.LaunchedSurveys.Count > 0)
                {
                    foreach (var surveyInstance in Model.LaunchedSurveys)
                    {
                        <div class="" style="border: 1px solid black; margin: 5px; padding: 5px; border-radius: 10px; width: 200px">
                            <div class="card" style="">
                                <h4>@(surveyInstance.Name)</h4>
                                <p style="line-height: 1.5em;">
                                    <strong>Start Date: </strong><br><span>@(surveyInstance.Start)</span><br />
                                    <strong>End Date: </strong><br><span>@(surveyInstance.End)</span><br />
                                    <strong>Status: </strong><br><span>@(surveyInstance.Status)</span><br />
                                </p>
                                <p>
                                    <hr />
                                    @Html.ActionLink("View Results", "Index", "SurveySummary")<br />
                                    <a href="#0">Release Results</a>
                                </p>
                            </div><!-- card -->
                        </div><!-- col -->
                    }
                } else
                {
                    <div class="dsh-no-items"><p>None defined - Execute steps 1 through 3 above to define a survey launch.</p></div>
                }
            </div><!-- flex row -->
        </div><!-- collapse -->
        <!-------------------------------------------------->
    </div>
</div><!-- Wrapper -->
<script>
    function areYouSure() {
        return confirm('Are you sure?');
    }
</script>
