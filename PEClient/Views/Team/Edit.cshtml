@*
    **********************************************************************************
    * Copyright (c) 2019 Robin Murray
    **********************************************************************************
    *
    * File: Edit.cshtml
    *
    * Description: Edit view for TeamController
    *
    * Author: Robin Murray
    *
    **********************************************************************************
    *
    * Granting License: The MIT License (MIT)
    *
    *   Permission is hereby granted, free of charge, to any person obtaining a copy
    *   of this software and associated documentation files (the "Software"), to deal
    *   in the Software without restriction, including without limitation the rights
    *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *   copies of the Software, and to permit persons to whom the Software is
    *   furnished to do so, subject to the following conditions:
    *   The above copyright notice and this permission notice shall be included in
    *   all copies or substantial portions of the Software.
    *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    *   THE SOFTWARE.
    *
    **********************************************************************************
*@

@model  PEClient.Models.TeamEditViewModel

@{
    ViewBag.Title = "Edit Peer Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-md sc-container">

    <div class="dsh-title">
        <h2>Edit: @(Model.TeamName ?? "Undefined")</h2>
    </div>

    <div class="dsh-content">
        <div id="vs-survey-questions" class="vs-survey-questions">
            @if (IsPost) // Validation Summary
            {
                <div class="alert alert-danger">@Html.ValidationSummary()</div>
            }

            @using (Html.BeginForm("Edit", "Team", FormMethod.Post, new { @class = "form-launch" }))
            {
                @Html.AntiForgeryToken()

                @* -- Team Id -- *@

                @Html.HiddenFor(m => m.Id)

                @* -- Team Name -- *@

                @Html.LabelFor(m => m.TeamName, "Team Name", new { @class = "control-label", style = "display: block;" });
                @Html.ValidationMessageFor(m => m.TeamName, "", new { @class = "alert-danger" });
                @Html.TextBoxFor(m => m.TeamName, new
                {
                    @class = "form-control",
                    title = "Enter a name for this peer group",
                    autofocus = "",
                    placeholder = "Enter name of team",
                    required = true
                });
                <br />

                @* -- Add User DropDown -- *@

                @Html.LabelFor(m => m.CandidateSelection, "Students", new { @class = "control-label" })<br />
                @Html.ValidationMessageFor(m => m.PeerSelection, "", new { @class = "alert-danger" })
                @Html.DropDownListFor(m => m.CandidateSelection, Model.Candidates, "-- select a student --", new { @class = "form-control", style = "display: inline-block; width: 250px;" })

                @* -- Add User Button -- *@

                <button type="button" id="btn-add-team" class="btn btn-primary" name="action" value="add-user" onclick="ShowRow();" style="margin-left: 5px; display: inline;">
                    Add
                </button>
                <br />

                @* -- Hidden Peer Group listbox -- *@

                @Html.ListBoxFor(m => m.PeerSelection, Model.Peers, new { @class = "form-control", style = "display: none" })

                <table id="tbl-edit-team" style="border-top: 1px solid #ccc; border-bottom: 1px solid #ccc; margin-top: 20px; margin-bottom: 20px;">
                    <tr>
                        <td colspan="4"><h4 id="table-team-name" style="text-decoration:underline"></h4></td>
                    </tr>
                    <tr>
                        <th class="table-header">Name</th>
                        <th class="table-header">Username</th>
                        <th class="table-header-badge"></th>
                    </tr>
                    @foreach (var peer in Model.PeerDetails)
                    {
                        <tr id="tr-@(peer.id)" style="display: none">
                            <td class="table-data">@peer.Name</td>
                            <td class="table-data">@peer.UserName</td>
                            <td class="table-data-badge">
                                <span class="badge">
                                    <a data-row-id="@(peer.id)" href="#0" onclick="deleteRow(event)" class="badge">delete</a>
                                </span>
                            </td>
                        </tr>
                    }
                </table>

                @* -- Submit and Cancel buttons -- *@

                @Html.Partial("~/Views/Shared/_SubmitAndCancel.cshtml", 
                    new ViewDataDictionary { 
                        { "cancel-controller", "Team" } ,
                        { "cancel-action", "Index" } ,
                        { "cancel-action-id", Model.Id }
                    })
            }
        </div>
    </div>
</div>

@section scripts{

    <script>

        $(document).ready(function () {
            //
            UpdateTableFromListbox();
        });

        // Transfers model data from hidden listbox into
        // table containing peers who have been selected
        function UpdateTableFromListbox() {
            // Cycle through selected listbox items
            $("#PeerSelection option:selected").each(function () {
                // Use the peers user ID to denote a row in the table
                var userId = $(this).val();
                $(`#tr-${userId}`).css("display", "table-row");
            });
        }

        // Shows the row corresponding to a selected peers user ID
        function ShowRow() {

            var userId = $("#CandidateSelection").val();

            if ("" != userId) {

                var tableRow = $(`#tr-${userId}`);

                if (tableRow.css("display") == "table-row") {
                    var name = $(`#CandidateSelection option[value='${userId}']`).text();
                    alert(name + " is already a member of the team!");
                    return;
                }

                tableRow.css("display", "table-row");

                // Select the list item in the hidden listbox specified by User ID
                $(`#PeerSelection option[value='${userId}']`).prop("selected", true);
            }
        }

        // Deletes a row from the table and prevents the anchor from firing.
        function deleteRow(event) {

            var userId = event.target.getAttribute('data-row-id');
            var rowToDelete = `#tr-${userId}`;
            $(rowToDelete).css("display", "none");
            event.preventDefault();

            // Deselect the list item in the hidden listbox specified by User ID
            $(`#PeerSelection option[value='${userId}']`).prop("selected", false);
        }
    </script>
}

