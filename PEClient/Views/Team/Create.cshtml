@*
    **********************************************************************************
    * Copyright (c) 2019 Robin Murray
    **********************************************************************************
    *
    * File: Create.cshtml
    *
    * Description: Create view for TeamController
    *
    * Author: Robin Murray
    *
    **********************************************************************************
    *
    * Granting License: The MIT License (MIT)
    *
    *   Permission is hereby granted, free of charge, to any person obtaining a copy
    *   of this software and associated documentation files (the "Software"), to deal
    *   in the Software without restriction, including without limitation the rights
    *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    *   copies of the Software, and to permit persons to whom the Software is
    *   furnished to do so, subject to the following conditions:
    *   The above copyright notice and this permission notice shall be included in
    *   all copies or substantial portions of the Software.
    *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    *   THE SOFTWARE.
    *
    **********************************************************************************
*@

@model  PEClient.Models.TeamCreateViewModel

@{
    ViewBag.Title = "Create Peer Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-sm sc-container">

    <div class="dsh-title">
        <h2>Create a Peer Group</h2>
    </div>

    <div class="dsh-content">
        <div class="dsh-content-image">
            <img src="\Content\images\windows-WJPHTJEtgzw-unsplash.jpg" class="create-team-image" />
        </div>

        @if (!ViewData.ModelState.IsValid) // Validation Summary
        {
            <div class="alert alert-danger">@Html.ValidationSummary()</div>
        }

        @using (Html.BeginForm("Create", "Team", FormMethod.Post, new { @class = "form-launch" }))
        {
            @Html.AntiForgeryToken()

            @* -- Team Name -- *@

            @Html.LabelFor(m => m.TeamName, "Peer Group Name", new { @class = "control-label", style = "display: block;" });
            @Html.ValidationMessageFor(m => m.TeamName, "", new { @class = "alert-danger" });
            @Html.TextBoxFor(m => m.TeamName, new
            {
                @class = "form-control",
                title = "Enter a name for this peer group",
                autofocus = "",
                placeholder = "Enter name of team",
                required = true,
                style = "margin-bottom: 10px"
            });

            @* -- Add User DropDown -- *@

            @Html.LabelFor(m => m.Students, "Students", new { @class = "control-label" })<br />
            <div class="d-flex team-add-students">
                <select id="Student" class="form-control flex-grow-1">
                    <option>-- select a student --</option>
                    @foreach (var student in Model.Students)
                    {
                        <option value="@student.Id">@student.Name (@student.UserName)</option>
                    }
                </select>

                @* -- Add User Button -- *@

                <button type="button"
                        id="btn-add-team"
                        class="btn btn-primary"
                        name="action"
                        value="add-user"
                        onclick="ShowRow();"
                        style="margin-left: 5px; display: inline;">
                    Add
                </button>
            </div>

            @* -- Hidden Peer Group listbox -- *@
            
            if (Model.PeerSelection == null)
            {
                Model.PeerSelection = new List<int>();
            }
            <select id="PeerSelection" name="PeerSelection" class="form-control" style="display: none" multiple>
                @foreach (var student in Model.Students)
                {
                    if (Model.PeerSelection.Contains(student.Id))
                    {
                        <option value="@student.Id" selected></option>
                    }
                    else
                    {
                        <option value="@student.Id"></option>
                    }
                }
            </select>

            @* -- Peer Group table -- *@

            @Html.Label("Peer Group Members", new { @class = "control-label", style = "display: block;" })
            @Html.ValidationMessageFor(m => m.PeerSelection, "", new { @class = "alert-danger" })

            <div class="table-responsive-md">
                <table id="tbl-create-team" class="table table-bordered table-hover tbl-team-create-edit">
                    <thead class="thead-dark thead-team-create-edit">
                        <tr>
                            <th class="table-header">Name</th>
                            <th class="table-header">Username</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var member in Model.Students)
                        {
                            <tr id="tr-@(member.Id)" style="display: none" class="table-warning">
                                <td id="td-@(member.Id)">@member.Name</td>
                                <td>@member.UserName</td>
                                <td>
                                    <a data-row-id="@(member.Id)"
                                       href="#0"
                                       onclick="deleteRow(event)"
                                       class="badge badge-primary badge-letter-spacing">delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @* -- Submit and Cancel buttons -- *@

            @Html.Partial("~/Views/Shared/_SubmitAndCancel.cshtml", 
           new ViewDataDictionary { { "Submit", "Create Peer Group" } })
        }
    </div>

</div>

@section scripts{

    <script>

        $(document).ready(function () {
            //
            UpdateTableFromListbox();
        });

        // Transfers model data from hidden listbox into
        // table containing peers who have been selected
        function UpdateTableFromListbox() {
            // Cycle through selected listbox items
            $("#PeerSelection option:selected").each(function () {
                // Use the peers user ID to denote a row in the table
                var userId = $(this).val();
                $(`#tr-${userId}`).css("display", "table-row");
            });
        }

        // Shows the row corresponding to a selected peers user ID
        function ShowRow() {

            var userId = $("#Student").val();

            if ("" != userId) {

                var tableRow = $(`#tr-${userId}`);

                if (tableRow.css("display") == "table-row") {
                    var name = $(`#td-${userId}`).text();
                    alert(name + " is already a member of the team!");
                    return;
                }

                tableRow.css("display", "table-row");

                // Select the list item in the hidden listbox specified by User ID
                $(`#PeerSelection option[value='${userId}']`).prop("selected", true);
            }
        }

        // Deletes a row from the table and prevents the anchor from firing.
        function deleteRow(event) {

            var userId = event.target.getAttribute('data-row-id');
            var rowToDelete = `#tr-${userId}`;
            $(rowToDelete).css("display", "none");
            event.preventDefault();

            // Deselect the list item in the hidden listbox specified by User ID
            $(`#PeerSelection option[value='${userId}']`).prop("selected", false);
        }
    </script>
}

